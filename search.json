[
  {
    "objectID": "presentation/Prometheus.html",
    "href": "presentation/Prometheus.html",
    "title": "",
    "section": "",
    "text": "Prometheus|400\n\n\nPrometheus Query Language (PromQL)\n\nPrometheus has a time series database\n\n\n\nFormat:\n<metric name>{<label name>=<label value>, ...}\neg:\napi_http_requests_total{method=\"POST\", handler=\"/messages\"}\n\n\n\n\n\n\nA counter is a cumulative metric that represents a single monotonically increasing counter whose value can only increase or be reset to zero on restart.\n\n\n\nA gauge is a metric that represents a single numerical value that can arbitrarily go up and down.\n\n\n\n\nA histogram samples observations (usually things like request durations or response sizes) and counts them in configurable buckets. It also provides a sum of all observed values.\n\n\n\nSimilar to a histogram, a summary samples observations (usually things like request durations and response sizes). While it also provides a total count of observations and a sum of all observed values, it calculates configurable quantiles over a sliding time window.\n\n\n\n\n\n\n\n\n\n\n\n\nVar type\nDescription\n\n\n\n\nString\na simple string value; currently unused\n\n\nScalar\na simple numeric floating point value\n\n\nRange vector\na set of time series containing a range of data points over time for each time series\n\n\nInstant Vector\na set of time series containing a single sample for each time series, all sharing the same timestamp\n\n\n\n\n\n\n\nms - milliseconds\ns - seconds\nm - minutes\nh - hours\nd - days - assuming a day has always 24h\nw - weeks - assuming a week has always 7d\ny - years - assuming a year has always 365d\n\n\n\n\n\n\n\n\n\n\nThe following binary arithmetic operators exist in Prometheus:\n\n\n\nOperator\nDescription\n\n\n\n\n+ \naddition\n\n\n- \nsubtraction\n\n\n* \nmultiplication\n\n\n/ \ndivision\n\n\n% \nmodulo\n\n\n^ \npower/exponentiation\n\n\n\n\n\n\nThe following binary comparison operators exist in Prometheus:\n\n\n\nComparison\nDescription\n\n\n\n\n==\n equal\n\n\n!=\n not-equal\n\n\n>\n greater-than\n\n\n<\n less-than\n\n\n>=\n greater-or-equal\n\n\n<= \nless-or-equal\n\n\n\n\n\n\n\nThese logical/set binary operators are only defined between instant vectors:\n\n\n\nlogical\ndescriptions\n\n\n\n\nand\n(intersection)\n\n\nor\n(union)\n\n\nunless\n(complement)\n\n\n\n\n\n\n\nPrometheus supports the following built-in aggregation operators that can be used to aggregate the elements of a single instant vector, resulting in a new vector of fewer elements with aggregated values:\n\n\n\nOperator\nDescription\n\n\n\n\nsum\ncalculate sum over dimensions\n\n\nmin\nselect minimum over dimensions\n\n\nmax\nselect maximum over dimensions\n\n\navg\ncalculate the average over dimensions\n\n\ngroup\nall values in the resulting vector are 1\n\n\nstddev\ncalculate population standard deviation over dimensions\n\n\nstdvar\ncalculate population standard variance over dimensions\n\n\ncount\ncount number of elements in the vector\n\n\ncount_values\ncount number of elements with the same value\n\n\nbottomk\nsmallest k elements by sample value\n\n\ntopk\nlargest k elements by sample value\n\n\nquantile\ncalculate φ-quantile\n\n\n\n\n\n\n\n\nKube-state-metrics https://github.com/kubernetes/kube-state-metrics"
  }
]